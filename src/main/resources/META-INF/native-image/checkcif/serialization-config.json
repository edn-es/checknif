{
    "lambdaCapturingTypes": [
        
    ],
    "types": [
        {
            "name": "byte[]"
        },
        {
            "name": "io.micronaut.core.beans.exceptions.IntrospectionException"
        },
        {
            "name": "io.micronaut.http.client.exceptions.HttpClientException"
        },
        {
            "name": "io.micronaut.http.client.exceptions.HttpClientResponseException"
        },
        {
            "name": "io.micronaut.http.codec.CodecException"
        },
        {
            "name": "io.micronaut.http.exceptions.HttpException"
        },
        {
            "name": "io.micronaut.serde.exceptions.SerdeException"
        },
        {
            "name": "java.io.IOException"
        },
        {
            "name": "java.io.NotSerializableException"
        },
        {
            "name": "java.io.ObjectStreamException"
        },
        {
            "name": "java.lang.Enum"
        },
        {
            "name": "java.lang.Exception"
        },
        {
            "name": "java.lang.Object[]"
        },
        {
            "name": "java.lang.RuntimeException"
        },
        {
            "name": "java.lang.StackTraceElement"
        },
        {
            "name": "java.lang.StackTraceElement[]"
        },
        {
            "name": "java.lang.String"
        },
        {
            "name": "java.lang.Throwable"
        },
        {
            "name": "java.util.ArrayList"
        },
        {
            "name": "java.util.Collections$EmptyList"
        },
        {
            "name": "java.util.Collections$SingletonList"
        },
        {
            "name": "java.util.HashSet"
        },
        {
            "name": "java.util.LinkedHashSet"
        },
        {
            "name": "java.util.concurrent.ArrayBlockingQueue"
        },
        {
            "name": "java.util.concurrent.locks.AbstractOwnableSynchronizer"
        },
        {
            "name": "java.util.concurrent.locks.AbstractQueuedSynchronizer"
        },
        {
            "name": "java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject"
        },
        {
            "name": "java.util.concurrent.locks.ReentrantLock"
        },
        {
            "name": "java.util.concurrent.locks.ReentrantLock$NonfairSync"
        },
        {
            "name": "java.util.concurrent.locks.ReentrantLock$Sync"
        }
    ],
    "proxies": [
        
    ]
}