[
    {
        "name": "[B"
    },
    {
        "name": "[Les.gob.agenciatributaria.www2.static_files.common.internet.dep.aplicaciones.es.aeat.burt.jdit.ws.vnifv2sal_xsd.Contribuyente_type1;"
    },
    {
        "name": "[Lio.micronaut.http.HttpMethod;"
    },
    {
        "name": "[Ljava.lang.Object;"
    },
    {
        "name": "[Ljava.lang.String;"
    },
    {
        "name": "[Lsun.security.pkcs.SignerInfo;"
    },
    {
        "name": "__redirected.__XMLInputFactory"
    },
    {
        "name": "__redirected.__XMLOutputFactory"
    },
    {
        "name": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.pattern.DateConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.pattern.LevelConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.pattern.LoggerConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.pattern.MessageConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.pattern.ThreadConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.pattern.color.HighlightingCompositeConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.ConsoleAppender",
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "setWithJansi",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.OutputStreamAppender",
        "methods": [
            {
                "name": "setEncoder",
                "parameterTypes": [
                    "ch.qos.logback.core.encoder.Encoder"
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.encoder.Encoder",
        "methods": [
            {
                "name": "valueOf",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
        "methods": [
            {
                "name": "setParent",
                "parameterTypes": [
                    "ch.qos.logback.core.spi.ContextAware"
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
        "methods": [
            {
                "name": "setPattern",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.pattern.color.CyanCompositeConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.pattern.color.GrayCompositeConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.pattern.color.MagentaCompositeConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.spi.ContextAware",
        "methods": [
            {
                "name": "valueOf",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "com.aayushatharva.brotli4j.Brotli4jLoader"
    },
    {
        "name": "com.github.luben.zstd.Zstd"
    },
    {
        "name": "com.sun.crypto.provider.AESCipher$General",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.sun.crypto.provider.ARCFOURCipher",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.sun.crypto.provider.DESCipher",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.sun.crypto.provider.DESedeCipher",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.sun.crypto.provider.DHParameters",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.sun.crypto.provider.HmacCore$HmacSHA256",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.sun.crypto.provider.HmacPKCS12PBECore$HmacPKCS12PBE_SHA1",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.sun.crypto.provider.PBEKeyFactory$PBEWithMD5AndDES",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.sun.crypto.provider.PBEParameters",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.sun.crypto.provider.PKCS12PBECipherCore$PBEWithSHA1AndDESede",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.sun.crypto.provider.PKCS12PBECipherCore$PBEWithSHA1AndRC2_40",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.sun.crypto.provider.TlsKeyMaterialGenerator",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.sun.crypto.provider.TlsMasterSecretGenerator",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.sun.crypto.provider.TlsPrfGenerator$V12",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.methvin.watchservice.MacOSXListeningWatchService"
    },
    {
        "name": "io.micrometer.context.ContextRegistry"
    },
    {
        "name": "io.micronaut.aop.InterceptorBinding",
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.aop.Introduction",
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.aop.internal.InterceptorRegistryBean",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.buffer.netty.$DefaultByteBufAllocatorConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.buffer.netty.$NettyByteBufferFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.context.AbstractBeanContextConditional",
        "allDeclaredClasses": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.context.AbstractExecutableMethodsDefinition",
        "allDeclaredClasses": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.context.AbstractInitializableBeanDefinition",
        "allDeclaredClasses": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.context.AbstractInitializableBeanDefinitionReference",
        "allDeclaredClasses": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.context.BeanContextConfigurable",
        "allDeclaredClasses": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.context.EnvironmentConfigurable",
        "allDeclaredClasses": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.context.annotation.DefaultScope",
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.context.annotation.Executable",
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.context.annotation.Factory",
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.context.annotation.Prototype"
    },
    {
        "name": "io.micronaut.context.annotation.Requires",
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.context.env.PropertiesPropertySourceLoader",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.context.env.exp.RandomPropertyExpressionResolver",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.context.env.yaml.YamlPropertySourceLoader",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.context.event.ApplicationEventPublisherFactory",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.context.propagation.instrument.execution.$ExecutorServiceInstrumenter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.core.annotation.AnnotationMetadata",
        "allDeclaredClasses": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.core.annotation.AnnotationMetadataDelegate",
        "allDeclaredClasses": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.core.annotation.AnnotationMetadataProvider",
        "allDeclaredClasses": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.core.annotation.AnnotationSource",
        "allDeclaredClasses": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.core.async.converters.ReactiveTypeConverterRegistrar",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.core.async.publisher.CompletableFuturePublisher"
    },
    {
        "name": "io.micronaut.core.async.publisher.Publishers$JustPublisher"
    },
    {
        "name": "io.micronaut.core.async.publisher.Publishers$JustThrowPublisher"
    },
    {
        "name": "io.micronaut.core.async.subscriber.Completable"
    },
    {
        "name": "io.micronaut.core.beans.BeanInfo",
        "allDeclaredClasses": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.core.naming.Named",
        "allDeclaredClasses": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.core.type.ArgumentCoercible",
        "allDeclaredClasses": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.discovery.$DefaultCompositeDiscoveryClient$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.discovery.$DefaultServiceInstanceIdGenerator$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanInstanceMetadata$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.discovery.config.$DefaultCompositeConfigurationClient$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.health.$DefaultCurrentHealthStatus$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.health.$HealthStatus$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.health.$HeartbeatConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.health.$HeartbeatDiscoveryClientCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.health.$HeartbeatTask$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.HttpTypeConverterRegistrar",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.bind.$DefaultRequestBinderRegistry$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.bind.binders.$DefaultBodyAnnotationBinder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.body.$CharSequenceBodyWriter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.body.$ConversionTextPlainHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.body.$DefaultMessageBodyHandlerRegistry$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.body.$RawMessageBodyHandlerRegistry$RawByteArrayHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.body.$RawMessageBodyHandlerRegistry$RawByteBufferHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.body.$RawMessageBodyHandlerRegistry$RawStringHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.body.$TextPlainHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.body.$TextStreamBodyWriter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.body.$WritableBodyWriter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$BeanConfiguration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$DefaultHttpClientConfiguration$DefaultConnectionPoolConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$DefaultHttpClientConfiguration$DefaultWebSocketCompressionConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$DefaultHttpClientConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$DefaultLoadBalancerResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceConnectionPoolConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultKeyConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceWebSocketCompressionConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientFactory$HealthCheckStarter1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.$ServiceHttpClientFactory$ServiceInstanceList0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.annotation.Client",
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.http.client.bind.$DefaultHttpClientBinderRegistry$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.filter.$DefaultHttpClientFilterResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.interceptor.$HttpClientIntroductionAdvice$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.interceptor.configuration.$DefaultClientVersioningConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.interceptor.configuration.$NamedClientVersioningConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.loadbalance.$DiscoveryClientLoadBalancerFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.loadbalance.$ServiceInstanceListLoadBalancerFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.loadbalance.LoadBalancerConverters",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.netty.$DefaultNettyHttpClientRegistry$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.netty.$DefaultNettyHttpClientRegistry$HttpClient0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.netty.ConnectionManager$Pool$2"
    },
    {
        "name": "io.micronaut.http.client.netty.ConnectionManager$Pool$2$1",
        "methods": [
            {
                "name": "channelActive",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.netty.ConnectionManager$Pool$ConnectionHolder$1"
    },
    {
        "name": "io.micronaut.http.client.netty.ConnectionManager$Pool$ConnectionHolder$3",
        "methods": [
            {
                "name": "channelInactive",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.netty.DefaultHttpClient$3"
    },
    {
        "name": "io.micronaut.http.client.netty.DefaultHttpClient$BaseHttpResponseHandler",
        "methods": [
            {
                "name": "channelInactive",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.netty.DefaultHttpClient$FullHttpResponseHandler",
        "methods": [
            {
                "name": "exceptionCaught",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Throwable"
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.netty.NettyClientHttpRequestFactory",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.netty.ResettableReadTimeoutHandler",
        "methods": [
            {
                "name": "channelRead",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object"
                ]
            },
            {
                "name": "channelReadComplete",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.netty.ResettableReadTimeoutHandler$NextInterceptor",
        "methods": [
            {
                "name": "channelRead",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.client.netty.ssl.$NettyClientSslBuilder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.codec.$CodecConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.converters.$HttpConverterRegistrar$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.converters.SharedHttpConvertersRegistrar",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.expression.$RequestConditionContext$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.hateoas.$AbstractResource$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.hateoas.$DefaultLink$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.hateoas.$GenericResource$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.hateoas.$JsonError$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.hateoas.$Resource$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.hateoas.$VndError$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.body.$ByteBufRawMessageBodyHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.body.$NettyJsonHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.body.$NettyJsonStreamHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.body.$NettyTextPlainHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.body.$NettyWritableBodyWriter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$DefaultEventLoopGroup1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$EventLoopGroup0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$EpollAvailabilityCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$EpollEventLoopGroupFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$IoUringAvailabilityCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$IoUringEventLoopGroupFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$KQueueAvailabilityCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$KQueueEventLoopGroupFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$NettyThreadFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$NettyThreadFactory$NettyThreadFactory0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.$NioEventLoopGroupFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.converters.$DefaultChannelOptionFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.converters.$EpollChannelOptionFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.channel.converters.$KQueueChannelOptionFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.configuration.$NettyGlobalConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.websocket.$NettyServerWebSocketBroadcaster$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.netty.websocket.$WebSocketMessageEncoder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.resource.$ResourceLoaderFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.resource.$ResourceLoaderFactory$FileSystemResourceLoader1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.resource.$ResourceLoaderFactory$GetClassPathResourceLoader0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.resource.$ResourceLoaderFactory$ResourceResolver2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.$CoroutineHelper$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.$HttpServerConfiguration$CorsConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.$HttpServerConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.$HttpServerConfiguration$HostResolutionConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.$HttpServerConfiguration$HttpLocaleResolutionConfigurationProperties$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.$HttpServerConfiguration$MultipartConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.$OptionsFilter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.$RouteExecutor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.HttpServerTypeConvertersRegistrar",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.binding.$BasicAuthArgumentBinder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.binding.$LocaleArgumentBinder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.binding.$RequestArgumentSatisfier$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.codec.$TextStreamCodec$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.cors.$CorsFilter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.exceptions.$ContentLengthExceededHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.exceptions.$ConversionErrorHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.exceptions.$DuplicateRouteHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.exceptions.$HttpStatusHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.exceptions.$JacksonExceptionHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.exceptions.$JsonExceptionHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.exceptions.$URISyntaxHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.exceptions.$UnsatisfiedArgumentHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.exceptions.$UnsatisfiedRouteHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.exceptions.response.$HateoasErrorResponseProcessor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.$DefaultHttpCompressionStrategy$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.$DefaultHttpContentProcessorResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$BuildDefaultServer0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.$NettyRequestArgumentSatisfier$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.NettyHttpResponseFactory",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.NettyHttpServer$1"
    },
    {
        "name": "io.micronaut.http.server.netty.NettyHttpServer$Listener"
    },
    {
        "name": "io.micronaut.http.server.netty.binders.$NettyServerRequestBinderRegistry$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.body.$FileBodyWriter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.body.$InputStreamBodyWriter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.body.$StreamFileBodyWriter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.body.$SystemFileBodyWriter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$AccessLogger$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$FileTypeHandlerConfiguration$CacheControlConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$FileTypeHandlerConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Http2Settings$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Http3Settings$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$NettyListenerConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Parent$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Worker$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.converters.$NettyConverters$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.converters.NettyConvertersSpi",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.discovery.$NettyEmbeddedServerInstance$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.discovery.$NettyServiceDiscovery$ApplicationEventListener$onStart1$Intercepted$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.discovery.$NettyServiceDiscovery$ApplicationEventListener$onStop2$Intercepted$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.discovery.$NettyServiceDiscovery$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.handler.PipeliningServerHandler",
        "methods": [
            {
                "name": "channelRead",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object"
                ]
            },
            {
                "name": "channelReadComplete",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelWritabilityChanged",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "exceptionCaught",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Throwable"
                ]
            },
            {
                "name": "userEventTriggered",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.jackson.$JsonHttpContentSubscriberFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.jackson.$JsonViewMediaTypeCodecFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.jackson.$JsonViewServerFilter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.ssl.$BuildSelfSignedCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.ssl.$CertificateProvidedSslBuilder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.ssl.$CertificateProvidedSslBuilder$SelfSignedNotConfigured$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.ssl.$SelfSignedSslBuilder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.ssl.$SelfSignedSslBuilder$SelfSignedConfigured$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.ssl.$SslEnabledCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.netty.websocket.$WebSocketUpgradeHandlerFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.util.$DefaultHttpClientAddressResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.util.$DefaultHttpHostResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.util.locale.$CompositeHttpLocaleResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.util.locale.$CookieLocaleResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.util.locale.$HttpFixedLocaleResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.util.locale.$HttpLocalizedMessageSource$Definition$Intercepted$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.util.locale.$HttpLocalizedMessageSource$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.util.locale.$RequestLocaleResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.server.websocket.$ServerWebSocketProcessor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ClientSslConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$DefaultSslConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ServerSslConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.util.$OutgoingHttpRequestProcessorImpl$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.inject.BeanContextConditional",
        "allDeclaredClasses": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.inject.BeanDefinition",
        "allDeclaredClasses": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.inject.BeanDefinitionReference",
        "allDeclaredClasses": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.inject.BeanType",
        "allDeclaredClasses": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.inject.ExecutableMethodsDefinition",
        "allDeclaredClasses": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.inject.InjectableBeanDefinition",
        "allDeclaredClasses": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.inject.InstantiatableBeanDefinition",
        "allDeclaredClasses": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.inject.QualifiedBeanType",
        "allDeclaredClasses": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.inject.annotation.AnnotationConvertersRegistrar",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.inject.provider.BeanProviderDefinition",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.inject.provider.JakartaProviderBeanDefinition",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.inject.provider.JavaxProviderBeanDefinition",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.$BeanConfiguration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.$JacksonConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.$ObjectMapperFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.$ObjectMapperFactory$JsonFactory0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.$ObjectMapperFactory$ObjectMapper1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.codec.$JsonMediaTypeCodec$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.codec.$JsonStreamMediaTypeCodec$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.core.env.CloudFoundryVcapApplicationPropertySourceLoader",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.core.env.CloudFoundryVcapServicesPropertySourceLoader",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.core.env.EnvJsonPropertySourceLoader",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.core.env.JsonPropertySourceLoader",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.databind.$DatabindPropertyBinderExceptionHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.databind.$JacksonDatabindMapper$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.databind.convert.$JacksonConverterRegistrar$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.modules.$BeanIntrospectionModule$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$ConvertibleMultiValuesSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$ConvertibleValuesSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$JacksonObjectSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$JsonNodeDeserializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$JsonNodeSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$OptionalValuesSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$ResourceModule$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$ResourceSerializerModifier$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.validation.$ValidationJacksonDeserializationPreInstantiateCallback$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.json.$JsonObjectSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.json.bind.$JsonBeanPropertyBinder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.json.body.$JsonMessageHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.json.codec.$JsonMediaTypeCodec$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.json.codec.$JsonStreamMediaTypeCodec$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.json.convert.$JsonConverterRegistrar$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.logging.$LogLevel$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.logging.$PropertiesLoggingLevelsConfigurer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.logging.LoggingConverterRegistrar",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.logging.impl.$Log4jLoggingSystem$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.logging.impl.$LogbackLoggingSystem$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.reactor.config.$ReactorConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.reactor.convert.$ReactorToRxJava2ConverterRegistrar$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.reactor.convert.$ReactorToRxJava3ConverterRegistrar$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.reactor.convert.ReactorConverterRegistrar",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.reactor.instrument.$ReactorAutomaticContextPropagation$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.reactor.instrument.$ReactorInstrumentation$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.$ApplicationConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.$ApplicationConfiguration$InstanceConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.beans.$MapperIntroduction$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.beans.$MapperMethodProcessor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.context.$CompositeMessageSource$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.context.env.$ConfigurationIntroductionAdvice$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.context.scope.$ThreadLocalCustomScope$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.context.scope.refresh.$RefreshInterceptor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.context.scope.refresh.$RefreshScope$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.context.scope.refresh.$RefreshScopeCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.converters.time.TimeConverterRegistrar",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$MediaTypeCodecRegistry0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.http.codec.$TextPlainCodec$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.http.scope.$RequestCustomScope$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.server.watch.event.$FileWatchRestartListener$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.$DefaultTaskExceptionHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.$LoomSupport$LoomCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.async.$AsyncInterceptor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$DefaultExecutorSelector$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$DefaultThreadFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$DefaultThreadFactory$ThreadFactory0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$ExecutorFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$ExecutorFactory$EventLoopGroupThreadFactory0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$ExecutorFactory$ExecutorService1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Blocking2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Io0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Virtual1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Configuration0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$UserExecutorConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.io.watch.$DefaultWatchThread$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.io.watch.$FileWatchCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.io.watch.$FileWatchConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.io.watch.$WatchServiceFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.io.watch.$WatchServiceFactory$WatchService0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.processor.$ScheduledMethodProcessor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.config.$DefaultDeserializationConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.config.$DefaultSerdeConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.config.$DefaultSerializationConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.jackson.$JacksonJsonMapper$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.jackson.$SerdeJacksonConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.$AdditionalSerdes$IntrospectionRef0",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.$AdditionalSerdes$IntrospectionRef1",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.$AdditionalSerdes$IntrospectionRef2",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.$DefaultSerdeIntrospections$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.$DefaultSerdeRegistry$ByteArraySerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.$DefaultSerdeRegistry$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.bind.$SerdeJsonBeanPropertyBinderExceptionHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.config.$SerdeJsonConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.$ConvertibleValuesDeserializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.$HealthResultDeserializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.$HealthResultDeserializer$HealthResultDto$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.$ObjectDeserializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.collect.$CoreCollectionsDeserializers$ArrayDequeDeserializer1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.collect.$CoreCollectionsDeserializers$ArrayListDeserializer0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.collect.$CoreCollectionsDeserializers$DefaultSetDeserializer4$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.collect.$CoreCollectionsDeserializers$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.collect.$CoreCollectionsDeserializers$HashSetDeserializer3$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.collect.$CoreCollectionsDeserializers$LinkedHashMapDeserializer7$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.collect.$CoreCollectionsDeserializers$LinkedHashSetDeserializer5$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.collect.$CoreCollectionsDeserializers$LinkedListDeserializer2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.collect.$CoreCollectionsDeserializers$OptionalDeserializer9$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.collect.$CoreCollectionsDeserializers$TreeMapDeserializer8$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.deserializers.collect.$CoreCollectionsDeserializers$TreeSetDeserializer6$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$ByteBufferSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$CoreSerdes$CharSequenceSerde3$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$CoreSerdes$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$CoreSerdes$DurationSerde1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$CoreSerdes$JsonNodeSerde4$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$CoreSerdes$ObjectArraySerde0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$CoreSerdes$PeriodSerde2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$DateSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$EnumSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$EnumSetDeserializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$HealthStatusSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$InetAddressSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$InstantSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$LocalDateSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$LocalDateTimeSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$LocalTimeSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$OffsetDateTimeSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$SqlDateSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$SqlTimestampSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$YearSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serdes.$ZonedDateTimeSerde$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$CoreSerializers$BooleanSerializer3$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$CoreSerializers$CharSequenceSerializer0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$CoreSerializers$CharSerializer2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$CoreSerializers$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$CoreSerializers$MapSerializer4$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$CoreSerializers$StringSerializer1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$IterableSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$ObjectSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$OptionalMultiValuesSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$OptionalSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$OptionalValuesSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.serde.support.serializers.$StreamSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.test.condition.$TestActiveCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.test.extensions.junit5.MicronautJunit5Extension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.test.extensions.junit5.annotation.MicronautTest",
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micronaut.test.support.server.$TestEmbeddedServer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.test.support.server.$TestExecutableEmbeddedServer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.test.support.sql.$ConnectionFactoryHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.test.support.sql.$DataSourceSqlHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.test.support.sql.$DelegatingDataSourceSqlHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.testresources.client.$SimpleJsonErrorModel$Embedded$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.testresources.client.$SimpleJsonErrorModel$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.testresources.client.$TestResourcesKeepAlive$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.testresources.client.TestResourcesClientPropertyExpressionResolver",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.testresources.client.TestResourcesClientPropertySourceLoader",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.$AnnotatedFilterRouteBuilder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.$AnnotatedMethodRouteBuilder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.$DefaultRouter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.$ServerFilterRouteBuilder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.naming.$ConfigurableUriNamingStrategy$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.naming.$HyphenatedUriNamingStrategy$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.resource.$StaticResourceConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.resource.$StaticResourceResolverFactory$Build0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.resource.$StaticResourceResolverFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.version.$ConfigurationDefaultVersionProvider$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.version.$RouteVersionFilter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.version.$RoutesVersioningConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.version.$VersionAwareRouterListener$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.version.resolution.$HeaderVersionResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.version.resolution.$HeaderVersionResolverConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.version.resolution.$ParameterVersionResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.web.router.version.resolution.$ParameterVersionResolverConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.websocket.interceptor.$ClientWebSocketInterceptor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.netty.bootstrap.ServerBootstrap$1"
    },
    {
        "name": "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
        "methods": [
            {
                "name": "channelRead",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object"
                ]
            },
            {
                "name": "exceptionCaught",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Throwable"
                ]
            }
        ]
    },
    {
        "name": "io.netty.buffer.AbstractByteBufAllocator",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.netty.buffer.AbstractReferenceCountedByteBuf",
        "fields": [
            {
                "name": "refCnt"
            }
        ]
    },
    {
        "name": "io.netty.buffer.ByteBuf"
    },
    {
        "name": "io.netty.channel.AbstractChannelHandlerContext",
        "fields": [
            {
                "name": "handlerState"
            }
        ]
    },
    {
        "name": "io.netty.channel.ChannelDuplexHandler",
        "methods": [
            {
                "name": "bind",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.net.SocketAddress",
                    "io.netty.channel.ChannelPromise"
                ]
            },
            {
                "name": "close",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "io.netty.channel.ChannelPromise"
                ]
            },
            {
                "name": "connect",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.net.SocketAddress",
                    "java.net.SocketAddress",
                    "io.netty.channel.ChannelPromise"
                ]
            },
            {
                "name": "deregister",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "io.netty.channel.ChannelPromise"
                ]
            },
            {
                "name": "disconnect",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "io.netty.channel.ChannelPromise"
                ]
            },
            {
                "name": "flush",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "read",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            }
        ]
    },
    {
        "name": "io.netty.channel.ChannelInboundHandlerAdapter",
        "methods": [
            {
                "name": "channelActive",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelInactive",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelRead",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object"
                ]
            },
            {
                "name": "channelReadComplete",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelRegistered",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelUnregistered",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelWritabilityChanged",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "exceptionCaught",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Throwable"
                ]
            },
            {
                "name": "userEventTriggered",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "io.netty.channel.ChannelInitializer",
        "methods": [
            {
                "name": "channelRegistered",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "exceptionCaught",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Throwable"
                ]
            }
        ]
    },
    {
        "name": "io.netty.channel.ChannelOutboundBuffer",
        "fields": [
            {
                "name": "totalPendingSize"
            },
            {
                "name": "unwritable"
            }
        ]
    },
    {
        "name": "io.netty.channel.CombinedChannelDuplexHandler",
        "methods": [
            {
                "name": "bind",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.net.SocketAddress",
                    "io.netty.channel.ChannelPromise"
                ]
            },
            {
                "name": "channelActive",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelInactive",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelRead",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object"
                ]
            },
            {
                "name": "channelReadComplete",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelRegistered",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelUnregistered",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelWritabilityChanged",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "close",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "io.netty.channel.ChannelPromise"
                ]
            },
            {
                "name": "connect",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.net.SocketAddress",
                    "java.net.SocketAddress",
                    "io.netty.channel.ChannelPromise"
                ]
            },
            {
                "name": "deregister",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "io.netty.channel.ChannelPromise"
                ]
            },
            {
                "name": "disconnect",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "io.netty.channel.ChannelPromise"
                ]
            },
            {
                "name": "exceptionCaught",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Throwable"
                ]
            },
            {
                "name": "flush",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "read",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "userEventTriggered",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object"
                ]
            },
            {
                "name": "write",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object",
                    "io.netty.channel.ChannelPromise"
                ]
            }
        ]
    },
    {
        "name": "io.netty.channel.DefaultChannelConfig",
        "fields": [
            {
                "name": "autoRead"
            },
            {
                "name": "writeBufferWaterMark"
            }
        ]
    },
    {
        "name": "io.netty.channel.DefaultChannelPipeline",
        "fields": [
            {
                "name": "estimatorHandle"
            }
        ]
    },
    {
        "name": "io.netty.channel.DefaultChannelPipeline$HeadContext",
        "methods": [
            {
                "name": "bind",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.net.SocketAddress",
                    "io.netty.channel.ChannelPromise"
                ]
            },
            {
                "name": "channelActive",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelInactive",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelRead",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object"
                ]
            },
            {
                "name": "channelReadComplete",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelRegistered",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelUnregistered",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelWritabilityChanged",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "close",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "io.netty.channel.ChannelPromise"
                ]
            },
            {
                "name": "connect",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.net.SocketAddress",
                    "java.net.SocketAddress",
                    "io.netty.channel.ChannelPromise"
                ]
            },
            {
                "name": "deregister",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "io.netty.channel.ChannelPromise"
                ]
            },
            {
                "name": "disconnect",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "io.netty.channel.ChannelPromise"
                ]
            },
            {
                "name": "exceptionCaught",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Throwable"
                ]
            },
            {
                "name": "flush",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "read",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "userEventTriggered",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object"
                ]
            },
            {
                "name": "write",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object",
                    "io.netty.channel.ChannelPromise"
                ]
            }
        ]
    },
    {
        "name": "io.netty.channel.DefaultChannelPipeline$TailContext",
        "methods": [
            {
                "name": "channelActive",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelInactive",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelRead",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object"
                ]
            },
            {
                "name": "channelReadComplete",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelRegistered",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelUnregistered",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelWritabilityChanged",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "exceptionCaught",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Throwable"
                ]
            },
            {
                "name": "userEventTriggered",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "io.netty.channel.SimpleChannelInboundHandler",
        "methods": [
            {
                "name": "channelRead",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "io.netty.handler.codec.MessageAggregator",
        "methods": [
            {
                "name": "channelInactive",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelReadComplete",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            }
        ]
    },
    {
        "name": "io.netty.handler.codec.MessageToMessageDecoder",
        "methods": [
            {
                "name": "channelRead",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "io.netty.handler.codec.http.HttpClientCodec"
    },
    {
        "name": "io.netty.handler.codec.http.HttpContentDecoder",
        "methods": [
            {
                "name": "channelInactive",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelReadComplete",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            }
        ]
    },
    {
        "name": "io.netty.handler.codec.http.HttpContentDecompressor"
    },
    {
        "name": "io.netty.handler.codec.http.HttpServerCodec"
    },
    {
        "name": "io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler",
        "methods": [
            {
                "name": "channelRead",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object"
                ]
            },
            {
                "name": "write",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object",
                    "io.netty.channel.ChannelPromise"
                ]
            }
        ]
    },
    {
        "name": "io.netty.handler.codec.http.websocketx.extensions.compression.WebSocketServerCompressionHandler"
    },
    {
        "name": "io.netty.handler.timeout.IdleStateHandler",
        "methods": [
            {
                "name": "channelActive",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelInactive",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelRead",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object"
                ]
            },
            {
                "name": "channelReadComplete",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "channelRegistered",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext"
                ]
            },
            {
                "name": "write",
                "parameterTypes": [
                    "io.netty.channel.ChannelHandlerContext",
                    "java.lang.Object",
                    "io.netty.channel.ChannelPromise"
                ]
            }
        ]
    },
    {
        "name": "io.netty.internal.tcnative.SSLContext"
    },
    {
        "name": "io.netty.util.DefaultAttributeMap",
        "fields": [
            {
                "name": "attributes"
            }
        ]
    },
    {
        "name": "io.netty.util.DefaultAttributeMap$DefaultAttribute",
        "fields": [
            {
                "name": "attributeMap"
            }
        ]
    },
    {
        "name": "io.netty.util.Recycler$DefaultHandle",
        "fields": [
            {
                "name": "state"
            }
        ]
    },
    {
        "name": "io.netty.util.ReferenceCountUtil",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.netty.util.concurrent.DefaultPromise",
        "fields": [
            {
                "name": "result"
            }
        ]
    },
    {
        "name": "io.netty.util.concurrent.SingleThreadEventExecutor",
        "fields": [
            {
                "name": "state"
            },
            {
                "name": "threadProperties"
            }
        ]
    },
    {
        "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
        "fields": [
            {
                "name": "producerLimit"
            }
        ]
    },
    {
        "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
        "fields": [
            {
                "name": "consumerIndex"
            }
        ]
    },
    {
        "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
        "fields": [
            {
                "name": "producerIndex"
            }
        ]
    },
    {
        "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
        "fields": [
            {
                "name": "consumerIndex"
            }
        ]
    },
    {
        "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
        "fields": [
            {
                "name": "producerIndex"
            }
        ]
    },
    {
        "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
        "fields": [
            {
                "name": "producerLimit"
            }
        ]
    },
    {
        "name": "io.reactivex.Completable"
    },
    {
        "name": "io.reactivex.Maybe"
    },
    {
        "name": "io.reactivex.Observable"
    },
    {
        "name": "io.reactivex.Single"
    },
    {
        "name": "io.reactivex.rxjava3.core.Completable"
    },
    {
        "name": "io.reactivex.rxjava3.core.Flowable"
    },
    {
        "name": "io.reactivex.rxjava3.core.Maybe"
    },
    {
        "name": "io.reactivex.rxjava3.core.Observable"
    },
    {
        "name": "io.reactivex.rxjava3.core.Single"
    },
    {
        "name": "jakarta.inject.Inject",
        "queryAllPublicMethods": true
    },
    {
        "name": "jakarta.inject.Scope",
        "queryAllPublicMethods": true
    },
    {
        "name": "jakarta.inject.Singleton",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.io.FilePermission"
    },
    {
        "name": "java.lang.Enum"
    },
    {
        "name": "java.lang.ProcessHandle",
        "methods": [
            {
                "name": "current",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "pid",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.RuntimePermission"
    },
    {
        "name": "java.lang.String"
    },
    {
        "name": "java.lang.Thread",
        "fields": [
            {
                "name": "threadLocalRandomProbe"
            }
        ],
        "methods": [
            {
                "name": "getContextClassLoader",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "ofVirtual",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.Thread$Builder",
        "methods": [
            {
                "name": "factory",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "name",
                "parameterTypes": [
                    "java.lang.String",
                    "long"
                ]
            }
        ]
    },
    {
        "name": "java.lang.Thread$Builder$OfVirtual"
    },
    {
        "name": "java.lang.invoke.MethodHandle"
    },
    {
        "name": "java.lang.management.ManagementFactory",
        "methods": [
            {
                "name": "getRuntimeMXBean",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.management.RuntimeMXBean",
        "methods": [
            {
                "name": "getInputArguments",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.net.NetPermission"
    },
    {
        "name": "java.net.SocketPermission"
    },
    {
        "name": "java.net.URLPermission",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "java.nio.Bits",
        "methods": [
            {
                "name": "unaligned",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.nio.Buffer",
        "fields": [
            {
                "name": "address"
            }
        ]
    },
    {
        "name": "java.nio.ByteBuffer",
        "methods": [
            {
                "name": "alignedSlice",
                "parameterTypes": [
                    "int"
                ]
            }
        ]
    },
    {
        "name": "java.nio.DirectByteBuffer",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "long",
                    "long"
                ]
            }
        ]
    },
    {
        "name": "java.nio.channels.spi.SelectorProvider",
        "methods": [
            {
                "name": "openServerSocketChannel",
                "parameterTypes": [
                    "java.net.ProtocolFamily"
                ]
            },
            {
                "name": "openSocketChannel",
                "parameterTypes": [
                    "java.net.ProtocolFamily"
                ]
            }
        ]
    },
    {
        "name": "java.security.AlgorithmParametersSpi"
    },
    {
        "name": "java.security.AllPermission"
    },
    {
        "name": "java.security.KeyStoreSpi"
    },
    {
        "name": "java.security.SecureRandomParameters"
    },
    {
        "name": "java.security.SecurityPermission"
    },
    {
        "name": "java.security.interfaces.ECPrivateKey"
    },
    {
        "name": "java.security.interfaces.ECPublicKey"
    },
    {
        "name": "java.security.interfaces.RSAPrivateKey"
    },
    {
        "name": "java.security.interfaces.RSAPublicKey"
    },
    {
        "name": "java.util.Date"
    },
    {
        "name": "java.util.HashSet"
    },
    {
        "name": "java.util.LinkedHashSet"
    },
    {
        "name": "java.util.PropertyPermission"
    },
    {
        "name": "java.util.concurrent.ArrayBlockingQueue"
    },
    {
        "name": "java.util.concurrent.Executors",
        "methods": [
            {
                "name": "newThreadPerTaskExecutor",
                "parameterTypes": [
                    "java.util.concurrent.ThreadFactory"
                ]
            }
        ]
    },
    {
        "name": "java.util.concurrent.ForkJoinTask",
        "fields": [
            {
                "name": "aux"
            },
            {
                "name": "status"
            }
        ]
    },
    {
        "name": "java.util.concurrent.atomic.AtomicBoolean",
        "fields": [
            {
                "name": "value"
            }
        ]
    },
    {
        "name": "java.util.concurrent.atomic.AtomicMarkableReference",
        "fields": [
            {
                "name": "pair"
            }
        ]
    },
    {
        "name": "java.util.concurrent.atomic.AtomicReference",
        "fields": [
            {
                "name": "value"
            }
        ]
    },
    {
        "name": "java.util.concurrent.atomic.Striped64",
        "fields": [
            {
                "name": "base"
            },
            {
                "name": "cellsBusy"
            }
        ]
    },
    {
        "name": "java.util.concurrent.locks.AbstractOwnableSynchronizer"
    },
    {
        "name": "java.util.concurrent.locks.AbstractQueuedSynchronizer"
    },
    {
        "name": "java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject"
    },
    {
        "name": "java.util.concurrent.locks.ReentrantLock"
    },
    {
        "name": "java.util.concurrent.locks.ReentrantLock$NonfairSync"
    },
    {
        "name": "java.util.concurrent.locks.ReentrantLock$Sync"
    },
    {
        "name": "javax.net.ssl.SSLEngine",
        "methods": [
            {
                "name": "getApplicationProtocol",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getHandshakeApplicationProtocol",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getHandshakeApplicationProtocolSelector",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "setHandshakeApplicationProtocolSelector",
                "parameterTypes": [
                    "java.util.function.BiFunction"
                ]
            }
        ]
    },
    {
        "name": "javax.net.ssl.SSLParameters",
        "methods": [
            {
                "name": "setApplicationProtocols",
                "parameterTypes": [
                    "java.lang.String[]"
                ]
            }
        ]
    },
    {
        "name": "javax.security.auth.x500.X500Principal",
        "fields": [
            {
                "name": "thisX500Name"
            }
        ],
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "sun.security.x509.X500Name"
                ]
            }
        ]
    },
    {
        "name": "javax.smartcardio.CardPermission"
    },
    {
        "name": "jdk.internal.misc.Unsafe",
        "methods": [
            {
                "name": "getUnsafe",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "kotlinx.coroutines.flow.Flow"
    },
    {
        "name": "org.apache.axiom.locator.DefaultOMMetaFactoryLocator",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.dom.DOMMetaFactory"
    },
    {
        "name": "org.apache.axiom.om.impl.dom.CDATASectionImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.dom.CommentImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.dom.DocumentFragmentImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.dom.DocumentImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.dom.DocumentTypeImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.dom.EntityReferenceImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.dom.NSAwareAttribute",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.dom.NSAwareElement",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.dom.NSUnawareAttribute",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.dom.NSUnawareElement",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.dom.NamespaceDeclaration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.dom.OMSourcedElementImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.dom.ProcessingInstructionImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.dom.TextImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.dom.factory.OMDOMMetaFactoryLoader",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.llom.CDATASectionImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.llom.CharacterDataImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.llom.NamespaceDeclaration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.llom.OMAttributeImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.llom.OMCommentImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.llom.OMDocTypeImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.llom.OMDocumentImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.llom.OMElementImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.llom.OMEntityReferenceImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.llom.OMProcessingInstructionImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.llom.OMSourcedElementImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.om.impl.llom.factory.OMLinkedListMetaFactoryLoader",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.SOAPMessageImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap11.SOAP11BodyImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap11.SOAP11EnvelopeImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap11.SOAP11FaultCodeImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap11.SOAP11FaultDetailImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap11.SOAP11FaultImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap11.SOAP11FaultReasonImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap11.SOAP11FaultRoleImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap11.SOAP11HeaderBlockImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap11.SOAP11HeaderImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap12.SOAP12BodyImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap12.SOAP12EnvelopeImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap12.SOAP12FaultCodeImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap12.SOAP12FaultDetailImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap12.SOAP12FaultImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap12.SOAP12FaultNodeImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap12.SOAP12FaultReasonImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap12.SOAP12FaultRoleImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap12.SOAP12FaultSubCodeImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap12.SOAP12FaultTextImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap12.SOAP12FaultValueImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap12.SOAP12HeaderBlockImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.dom.soap12.SOAP12HeaderImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.SOAPMessageImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap11.SOAP11BodyImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap11.SOAP11EnvelopeImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap11.SOAP11FaultCodeImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap11.SOAP11FaultDetailImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap11.SOAP11FaultImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap11.SOAP11FaultReasonImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap11.SOAP11FaultRoleImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap11.SOAP11HeaderBlockImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap11.SOAP11HeaderImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap12.SOAP12BodyImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap12.SOAP12EnvelopeImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap12.SOAP12FaultCodeImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap12.SOAP12FaultDetailImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap12.SOAP12FaultImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap12.SOAP12FaultNodeImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap12.SOAP12FaultReasonImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap12.SOAP12FaultRoleImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap12.SOAP12FaultSubCodeImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap12.SOAP12FaultTextImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap12.SOAP12FaultValueImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap12.SOAP12HeaderBlockImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axiom.soap.impl.llom.soap12.SOAP12HeaderImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.builder.ApplicationXMLBuilder",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.builder.XFormURLEncodedBuilder",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.deployment.POJODeployer",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.deployment.ServiceDeployer",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.deployment.TransportDeployer",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.deployment.WSDLServiceBuilderExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.dispatchers.AddressingBasedDispatcher",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.dispatchers.HTTPLocationBasedDispatcher",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.dispatchers.RequestURIBasedDispatcher",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.dispatchers.RequestURIOperationDispatcher",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.dispatchers.SOAPActionBasedDispatcher",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.dispatchers.SOAPMessageBodyBasedDispatcher",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.engine.AxisEngine"
    },
    {
        "name": "org.apache.axis2.engine.DispatchPhase",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.jaxws.framework.JAXWSServiceBuilderExtension"
    },
    {
        "name": "org.apache.axis2.rpc.receivers.RPCInOnlyMessageReceiver",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.rpc.receivers.RPCMessageReceiver",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.transport.http.ApplicationXMLFormatter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.transport.http.MultipartFormDataFormatter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.transport.http.SOAPMessageFormatter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.transport.http.SimpleHTTPServer",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.transport.http.XFormURLEncodedFormatter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.transport.http.impl.httpclient4.HTTPClient4TransportSender",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.axis2.transport.local.LocalTransportSender",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.commons.logging.LogFactory"
    },
    {
        "name": "org.apache.commons.logging.impl.LogFactoryImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.apache.commons.logging.impl.SimpleLog",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setLogFactory",
                "parameterTypes": [
                    "org.apache.commons.logging.LogFactory"
                ]
            }
        ]
    },
    {
        "name": "org.apache.commons.logging.impl.WeakHashtable",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "org.fusesource.jansi.AnsiConsole"
    },
    {
        "name": "reactor.core.publisher.FlatMapTracker",
        "fields": [
            {
                "name": "size"
            }
        ]
    },
    {
        "name": "reactor.core.publisher.Flux"
    },
    {
        "name": "reactor.core.publisher.FluxCreate$BaseSink",
        "fields": [
            {
                "name": "disposable"
            },
            {
                "name": "requestConsumer"
            },
            {
                "name": "requested"
            }
        ]
    },
    {
        "name": "reactor.core.publisher.FluxCreate$BufferAsyncSink",
        "fields": [
            {
                "name": "wip"
            }
        ]
    },
    {
        "name": "reactor.core.publisher.FluxCreate$SerializedFluxSink",
        "fields": [
            {
                "name": "error"
            },
            {
                "name": "wip"
            }
        ]
    },
    {
        "name": "reactor.core.publisher.FluxFlatMap$FlatMapMain",
        "fields": [
            {
                "name": "error"
            },
            {
                "name": "requested"
            },
            {
                "name": "wip"
            }
        ]
    },
    {
        "name": "reactor.core.publisher.FluxIterable$IterableSubscription",
        "fields": [
            {
                "name": "requested"
            }
        ]
    },
    {
        "name": "reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber",
        "fields": [
            {
                "name": "requested"
            }
        ]
    },
    {
        "name": "reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber",
        "fields": [
            {
                "name": "requested"
            },
            {
                "name": "s"
            },
            {
                "name": "thread"
            }
        ]
    },
    {
        "name": "reactor.core.publisher.FluxSwitchMapNoPrefetch$SwitchMapMain",
        "fields": [
            {
                "name": "requested"
            },
            {
                "name": "state"
            },
            {
                "name": "throwable"
            }
        ]
    },
    {
        "name": "reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber",
        "fields": [
            {
                "name": "index"
            },
            {
                "name": "timeout"
            }
        ]
    },
    {
        "name": "reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber",
        "fields": [
            {
                "name": "s"
            }
        ]
    },
    {
        "name": "reactor.core.publisher.Mono"
    },
    {
        "name": "reactor.core.publisher.MonoCallable$MonoCallableSubscription",
        "fields": [
            {
                "name": "requestedOnce"
            }
        ]
    },
    {
        "name": "reactor.core.publisher.MonoDelay$MonoDelayRunnable",
        "fields": [
            {
                "name": "state"
            }
        ]
    },
    {
        "name": "reactor.core.publisher.MonoFlatMap$FlatMapMain",
        "fields": [
            {
                "name": "second"
            }
        ]
    },
    {
        "name": "reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain",
        "fields": [
            {
                "name": "inner"
            },
            {
                "name": "requested"
            }
        ]
    },
    {
        "name": "reactor.core.publisher.MonoNext$NextSubscriber",
        "fields": [
            {
                "name": "wip"
            }
        ]
    },
    {
        "name": "reactor.core.publisher.Operators$MultiSubscriptionSubscriber",
        "fields": [
            {
                "name": "missedProduced"
            },
            {
                "name": "missedRequested"
            },
            {
                "name": "missedSubscription"
            },
            {
                "name": "wip"
            }
        ]
    },
    {
        "name": "reactor.core.publisher.Operators$ScalarSubscription",
        "fields": [
            {
                "name": "once"
            }
        ]
    },
    {
        "name": "reactor.core.publisher.StrictSubscriber",
        "fields": [
            {
                "name": "error"
            },
            {
                "name": "requested"
            },
            {
                "name": "s"
            },
            {
                "name": "wip"
            }
        ]
    },
    {
        "name": "reactor.core.scheduler.ParallelScheduler",
        "fields": [
            {
                "name": "state"
            }
        ]
    },
    {
        "name": "reactor.core.scheduler.SchedulerTask",
        "fields": [
            {
                "name": "future"
            },
            {
                "name": "parent"
            }
        ]
    },
    {
        "name": "reactor.util.concurrent.MpscLinkedQueue",
        "fields": [
            {
                "name": "consumerNode"
            },
            {
                "name": "producerNode"
            }
        ]
    },
    {
        "name": "reactor.util.concurrent.MpscLinkedQueue$LinkedQueueNode",
        "fields": [
            {
                "name": "next"
            }
        ]
    },
    {
        "name": "reactor.util.concurrent.SpscLinkedArrayQueue",
        "fields": [
            {
                "name": "consumerIndex"
            },
            {
                "name": "producerIndex"
            }
        ]
    },
    {
        "name": "rest2soap.$Rest2soapTest$Definition",
        "allDeclaredClasses": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "rest2soap.$Rest2soapTest$Definition$Exec",
        "allDeclaredClasses": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "rest2soap.$Rest2soapTest$Definition$Reference",
        "allDeclaredClasses": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "allDeclaredClasses": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "testCif",
                "parameterTypes": [
                    "io.micronaut.http.client.HttpClient"
                ]
            },
            {
                "name": "testCifs",
                "parameterTypes": [
                    "io.micronaut.http.client.HttpClient"
                ]
            },
            {
                "name": "testItWorks",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "testNif",
                "parameterTypes": [
                    "io.micronaut.http.client.HttpClient"
                ]
            },
            {
                "name": "testNifs",
                "parameterTypes": [
                    "io.micronaut.http.client.HttpClient"
                ]
            },
            {
                "name": "testRecargo",
                "parameterTypes": [
                    "io.micronaut.http.client.HttpClient"
                ]
            }
        ],
        "name": "rest2soap.Rest2soapTest",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "rest2soap.api.$NifRequest$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "rest2soap.api.$RestController$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "rest2soap.config.$CheckNifConfig$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "rest2soap.config.$SslFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "rest2soap.model.$Contribuyente$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "rest2soap.model.$ContribuyenteRequest$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "rest2soap.model.$RecargoEquivalenciaResponse$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "rest2soap.service.$NifSoapService$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "rest2soap.service.$RecargoEquivalenciaSoapService$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.misc.Unsafe",
        "fields": [
            {
                "name": "theUnsafe"
            }
        ],
        "methods": [
            {
                "name": "copyMemory",
                "parameterTypes": [
                    "java.lang.Object",
                    "long",
                    "java.lang.Object",
                    "long",
                    "long"
                ]
            },
            {
                "name": "getAndAddLong",
                "parameterTypes": [
                    "java.lang.Object",
                    "long",
                    "long"
                ]
            },
            {
                "name": "getAndSetObject",
                "parameterTypes": [
                    "java.lang.Object",
                    "long",
                    "java.lang.Object"
                ]
            },
            {
                "name": "invokeCleaner",
                "parameterTypes": [
                    "java.nio.ByteBuffer"
                ]
            },
            {
                "name": "storeFence",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.misc.VM"
    },
    {
        "name": "sun.nio.ch.SelectorImpl",
        "fields": [
            {
                "name": "publicSelectedKeys"
            },
            {
                "name": "selectedKeys"
            }
        ]
    },
    {
        "name": "sun.security.pkcs12.PKCS12KeyStore",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.provider.DSA$SHA224withDSA",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.provider.DSA$SHA256withDSA",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.provider.NativePRNG",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.security.SecureRandomParameters"
                ]
            }
        ]
    },
    {
        "name": "sun.security.provider.SHA",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.provider.SHA2$SHA224",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.provider.SHA2$SHA256",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.provider.SHA5$SHA384",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.provider.SHA5$SHA512",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.provider.X509Factory",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.provider.certpath.PKIXCertPathValidator",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.rsa.PSSParameters",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.rsa.RSAKeyFactory$Legacy",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.rsa.RSAPSSSignature",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.rsa.RSASignature$SHA224withRSA",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.rsa.RSASignature$SHA256withRSA",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.ssl.SSLContextImpl$DefaultSSLContext",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.ssl.SSLContextImpl$TLSContext",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.util.ObjectIdentifier"
    },
    {
        "name": "sun.security.x509.AuthorityInfoAccessExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.AuthorityKeyIdentifierExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.BasicConstraintsExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.CRLDistributionPointsExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.CertificateExtensions"
    },
    {
        "name": "sun.security.x509.CertificatePoliciesExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.ExtendedKeyUsageExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.IssuerAlternativeNameExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.KeyUsageExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.NetscapeCertTypeExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.PrivateKeyUsageExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.SubjectAlternativeNameExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.SubjectKeyIdentifierExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    }
]